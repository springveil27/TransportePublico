// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransportePublicoRD.Infrastructure.Data;

#nullable disable

namespace TransportePublicoRD.Migrations
{
    [DbContext(typeof(DbContextApp))]
    [Migration("20250610073606_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TransportePublicoRD.Entities.PublicRoutes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PublicRoutes");
                });

            modelBuilder.Entity("TransportePublicoRD.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("FrequencyMinutes")
                        .HasColumnType("int");

                    b.Property<int>("PublicRouteId")
                        .HasColumnType("int");

                    b.Property<int>("PublicRoutesId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("PublicRoutesId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("TransportePublicoRD.Entities.Stop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PublicRouteId")
                        .HasColumnType("int");

                    b.Property<int>("PublicRoutesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublicRoutesId");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("TransportePublicoRD.Entities.Schedule", b =>
                {
                    b.HasOne("TransportePublicoRD.Entities.PublicRoutes", "PublicRoutes")
                        .WithMany("Schedules")
                        .HasForeignKey("PublicRoutesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicRoutes");
                });

            modelBuilder.Entity("TransportePublicoRD.Entities.Stop", b =>
                {
                    b.HasOne("TransportePublicoRD.Entities.PublicRoutes", "PublicRoutes")
                        .WithMany("Stops")
                        .HasForeignKey("PublicRoutesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicRoutes");
                });

            modelBuilder.Entity("TransportePublicoRD.Entities.PublicRoutes", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Stops");
                });
#pragma warning restore 612, 618
        }
    }
}
